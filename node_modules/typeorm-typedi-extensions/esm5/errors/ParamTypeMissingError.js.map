{"version":3,"file":"ParamTypeMissingError.js","sourceRoot":"","sources":["../../../src/errors/ParamTypeMissingError.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;IAA2C,yCAAK;IAC9C,+BAAY,MAAc,EAAE,YAAoB,EAAE,KAAa;QAA/D,YACE,kBACE,uCAAoC,YAAY,qBAAc,KAAK,GAAG,CAAC,wBACrE,MAAM,CAAC,WAAW,CAAC,IAAI,aACf;YACR,4FAA0F;YAC1F,oGAAkG;YAClG,0EAA0E;YAC1E,8EAA8E,CACjF,SAGF;QADC,MAAM,CAAC,cAAc,CAAC,KAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,CAAC;;IAC/D,CAAC;IACH,4BAAC;AAAD,CAAC,AAdD,CAA2C,KAAK,GAc/C","sourcesContent":["export class ParamTypeMissingError extends Error {\n  constructor(object: Object, propertyName: string, index: number) {\n    super(\n      `Cannot get reflected type for a \"${propertyName}\" method's ${index + 1}. parameter of ${\n        object.constructor.name\n      } class. ` +\n        `Make sure you have turned on an \"emitDecoratorMetadata\": true, option in tsconfig.json. ` +\n        `and that you have imported \"reflect-metadata\" on top of the main entry file in your application.` +\n        `And make sure that you have annotated the property type correctly with: ` +\n        `Repository, MongoRepository, TreeRepository or custom repository class type.`\n    );\n\n    Object.setPrototypeOf(this, ParamTypeMissingError.prototype);\n  }\n}\n"]}